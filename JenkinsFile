pipeline {
    agent any
    
    triggers {
        pollSCM('H/5 * * * *')
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/ankitalodha05/FlaskTest.git'
            }
        }
        
        stage('Build') {
            steps {
                script {
                    sh '''
                    python3 -m venv venv
                    source venv/bin/activate
                    python -m pip install --upgrade pip
                    python -m pip install -r requirements.txt
                    '''
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    sh 'source venv/bin/activate && pytest --junitxml=test-results.xml'
                }
            }
        }
        
        stage('Deploy') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                script {
                    sh 'source venv/bin/activate && nohup python3 app.py > flask.log 2>&1 &'
                }
            }
        }
    }

    post {
        success {
            emailext subject: "Jenkins Build Success: ${JOB_NAME}",
                     body: "Build #${BUILD_NUMBER} for ${JOB_NAME} succeeded.\nCheck: ${BUILD_URL}",
                     to: 'ankitalodha05@gmail.com'
        }
        failure {
            emailext subject: "Jenkins Build Failed: ${JOB_NAME}",
                     body: "Build for ${JOB_NAME} failed.\nCheck logs: ${BUILD_URL}",
                     to: 'ankitalodha05@gmail.com'
        }
    }
}

